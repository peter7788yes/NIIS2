{"version":3,"sources":["RolePowerSetting_AddPower.src.js"],"names":["$","lastNode","each","data","index","item","myTr","PID","ID","ModuleName","after","$itemNode","i","append","$parent","haschildrens","parseInt","attr","$parentNext","next","blank","level","myClass","level0_IndexAry","push","length","document","on","e","isChecked","this","prop","trIndex","parent","aryIndex","indexOf","index1","index2","checkedValue","val","$trs","tr","get","find","preventDefault","level1_IndexAry","$tr","closest","pid","value","trIndexB","aryIndexB","index1B","index2B","$trsB","checkedCountB","$cbs","trigger","x","toString","pidA","trIndexA","aryIndexA","index1A","index2A","$trsA","checkedCountA","pidB","$grandParent","$brothers","allChecked","allUnChecked","ajaxStart","show","ajaxComplete","hide","postIds","robj","mId","replace","ps","cb","reverse","querySelector","JSON","stringify","keys","values","CI","doPOST","url","html","write"],"mappings":"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","file":"RolePowerSetting_AddPower.min.js","sourcesContent":["$(function () {\r\n    var myLi = \"\";\r\n    var lastNode = {};\r\n    $.each(data, function (index, item) {\r\n        //var th_or_td_start = \"<td>\";\r\n        //var th_or_td_end = \"</td>\";\r\n\r\n        myTr = \"\";\r\n        if (item.PID == 0) {\r\n            myTr = '<tr id=\"x' + item.ID + '\" haschildrens=\"0\" class=\"pinkcolor\" level=\"0\" pid=\"' + item.PID + '\">' + '<td>' + item.ModuleName + '</td></tr>';\r\n            //myTr = '<tr id=\"x' + item.ID + '\" level=\"0\" >' + th_or_td_start + item.ModuleName + th_or_td_end +'</tr>';\r\n            $('#tableRoot tr:last').after(myTr);\r\n            var $itemNode = $(\"#x\" + item.ID);\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"2\" class=\"changeParent\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"2\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"3\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"4\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"5\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"6\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"7\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"8\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"9\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"10\"></td>');\r\n            for (var i = 2; i <= 10; i++) {\r\n                $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n            }\r\n            $itemNode.append('<td class=\"aCenter\"><input type=\"button\" style=\"margin-right:5px\" value=\"全選\" class=\"allBtn btn\" /><input type=\"button\" value=\"全不選\" class=\"disAllBtn btn\"/></td>');\r\n\r\n        }\r\n        else {\r\n\r\n\r\n\r\n            var $parent = $(\"#x\" + item.PID);\r\n            var haschildrens = parseInt($parent.attr(\"haschildrens\"));\r\n            var $parentNext={};\r\n            if (haschildrens > 0) {\r\n                $parentNext=$parent.next();\r\n                for (var i = 1; i <= haschildrens-1; i++)\r\n                {\r\n                    $parentNext = $parentNext.next();\r\n                }\r\n                //console.log($parentNext[0]);\r\n            }\r\n            else {\r\n                $parentNext = $parent;\r\n            }\r\n\r\n\r\n            var blank = \"\";\r\n            var level = parseInt($parent.attr(\"level\")) + 1;\r\n            //console.log(level);\r\n\r\n            //if (level < 2) {\r\n            //    th_or_td_start = \"<th>\";\r\n            //    th_or_td_end = \"</th>\";\r\n            //}\r\n\r\n            for (var i = 0; i <= level; i++) {\r\n                blank += \"&nbsp;&nbsp;&nbsp;\";\r\n            }\r\n            if (level >= 2)\r\n                blank += \"&nbsp;&nbsp;&nbsp;\";\r\n            \r\n            var myClass=\"\";\r\n            if (level == 1)\r\n                myClass=\"yellowcolor\"\r\n            $parentNext.after('<tr class=\"' + myClass + '\" id=\"x' + item.ID + '\" haschildrens=\"0\" level=\"' + level + '\" pid=\"' + item.PID + '\">' + '<td>' + blank + item.ModuleName + '</td></tr>');\r\n            $(\"#x\" + item.PID).attr(\"haschildrens\", haschildrens+1);\r\n\r\n            //$(\"#x\" + item.PID).after('<tr id=\"x' + item.ID + '\"  level=\"' + level + '\" pid=\"' + item.PID + '\">' + '<td>' + blank + item.ModuleName + '</td></tr>');\r\n              \r\n            var $itemNode = $(\"#x\" + item.ID);\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"2\" class=\"changeParent\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"2\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"3\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"4\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"5\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"6\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"7\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"8\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"9\"></td>');\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"10\"></td>');\r\n            for (var i = 2; i <= 10; i++) {\r\n                $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n            }\r\n            $itemNode.append('<td class=\"aCenter\"><input type=\"button\" value=\"全選\" style=\"margin-right:5px\" class=\"allBtn btn\" /><input type=\"button\" value=\"全不選\"/ class=\"disAllBtn btn\"></td>');\r\n        }\r\n\r\n        lastNode = item;\r\n    });\r\n\r\n    var level0_IndexAry = [];\r\n    $.each($(\"tr[level='0']\"), function (index, item) {\r\n        level0_IndexAry.push($(item).index());\r\n        //console.log(level0_IndexAry);\r\n    });\r\n    level0_IndexAry.push($(\"#tableRoot>tbody>tr\").length - 1);\r\n    //console.log(level0_IndexAry);\r\n    $(document).on(\"change\", \"tr[level='0']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var trIndex = $(this).parent(\"td\").parent('tr').index();\r\n        var aryIndex = level0_IndexAry.indexOf(trIndex);\r\n        var index1 = trIndex + 1;\r\n        var index2 = level0_IndexAry[aryIndex + 1] - 1;\r\n\r\n        if ((aryIndex + 1) == level0_IndexAry.length - 1)\r\n            index2 = level0_IndexAry[level0_IndexAry.length - 1];\r\n        var checkedValue = $(this).val();\r\n        //console.log(index1);\r\n        //console.log(index2);\r\n        //console.log(checkedValue);\r\n        var $trs = $(\"#tableRoot>tbody>tr\");\r\n        for (var i = index1; i <= index2; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trs.get(i);\r\n            //console.log(tr);\r\n            $(tr).find('input:checkbox[value=\"' + checkedValue + '\"]').prop('checked', isChecked);\r\n        }\r\n       \r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    var level1_IndexAry = [];\r\n    $.each($(\"tr[level='0'],tr[level='1']\"), function (index, item) {\r\n        level1_IndexAry.push($(item).index());\r\n    });\r\n    level1_IndexAry.push($(\"#tableRoot>tbody>tr\").length - 1);\r\n    //console.log(level0_IndexAry);\r\n    $(document).on(\"change\", \"tr[level='1']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var trIndex = $(this).parent(\"td\").parent('tr').index();\r\n        var aryIndex = level1_IndexAry.indexOf(trIndex);\r\n        var index1 = trIndex + 1;\r\n        var index2 = level1_IndexAry[aryIndex + 1] - 1;\r\n        //console.log(level1_IndexAry[aryIndex + 1] - 1);\r\n        if ((aryIndex + 1) == level1_IndexAry.length - 1) {\r\n            index2 = level1_IndexAry[level1_IndexAry.length - 1];\r\n        }\r\n        //console.log(index2);\r\n        var checkedValue = $(this).val();\r\n        //console.log(index1);\r\n        //console.log(index2);\r\n        //console.log(checkedValue);\r\n        var $trs = $(\"#tableRoot>tbody>tr\");\r\n        for (var i = index1; i <= index2; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trs.get(i);\r\n            //console.log(tr);\r\n            $(tr).find('input:checkbox[value=\"' + checkedValue + '\"]').prop('checked', isChecked);\r\n        }\r\n\r\n        //console.log(99999);\r\n        var $tr = $(this).closest(\"tr\");\r\n        var pid = $tr.attr('pid');\r\n        var $parent = $('#x' + pid);\r\n        var value = $(this).val();\r\n        var trIndexB = $parent.index();\r\n        var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n        var index1B = trIndexB + 1;\r\n        var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n        if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n            index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n\r\n        var $trsB = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountB = 0;\r\n        for (var i = index1B; i <= index2B; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsB.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountB++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n\r\n            if (checkedCountB == 0) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n            if ((checkedCountB - 1) != (index2B - index1B)) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else\r\n            {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \".allBtn\", function (e) {\r\n\r\n       \r\n        //$(this).parents(\"tr:first\").find(\":checkbox\").prop(\"checked\", true);\r\n\r\n        var $tr =$(this).closest(\"tr\");\r\n        var level =$tr.attr(\"level\");\r\n        //console.log(level);\r\n        var $cbs = $tr.find(\"input:checkbox\");\r\n        switch(level)    \r\n        {\r\n            case \"0\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", false);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", true);\r\n                });\r\n                break;\r\n            case \"1\":\r\n                $.each($cbs, function (index, item) {\r\n                     $(item).prop(\"checked\",false);\r\n                     $(item).trigger(\"click\");\r\n                     $(item).prop(\"checked\",true);\r\n                });\r\n\r\n               \r\n                var pid = $tr.attr('pid');\r\n                var $parent = $('#x' + pid);\r\n                var trIndexB = $parent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++)\r\n                {\r\n                        //console.log(x);\r\n                        var checkedCountB = 0;\r\n                        for (var i = index1B; i <= index2B; i++) {\r\n                            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                            var tr = $trsB.get(i);\r\n                            //console.log(tr);\r\n\r\n                            $.each($(tr).find('input:checkbox[value=\"'+x+'\"]'), function (index, item) {\r\n                                if ($(item).prop(\"checked\") == true) {\r\n                                    checkedCountB++;\r\n                                }\r\n                            });\r\n                        }\r\n                     \r\n\r\n                       \r\n                        if (x.toString() == \"2\") {\r\n                            if (checkedCountB == 0) {\r\n                                $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                            }\r\n                            else {\r\n                                $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                                $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                            }\r\n                            else\r\n                            {\r\n                                $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                            }\r\n                        }\r\n                       \r\n                }\r\n\r\n                break;\r\n            default:\r\n                $cbs.prop(\"checked\", false);\r\n                $cbs.trigger(\"click\");\r\n                $cbs.prop(\"checked\", true);\r\n\r\n\r\n                var pidA = $tr.attr('pid');\r\n                var $parent = $('#x' + pidA);\r\n                var trIndexA = $parent.index();\r\n                var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n                var index1A = trIndexA + 1;\r\n                var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n                if ((aryIndexA + 1) == level1_IndexAry.length - 1)\r\n                    index2A= level1_IndexAry[level1_IndexAry.length - 1];\r\n                var $trsA = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountA = 0;\r\n                    for (var i = index1A; i <= index2A; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsA.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountA++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountA == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountA - 1) == (index2A - index1A)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                var pidB = $parent.attr('pid');\r\n                var $grandParent = $('#x' + pidB);\r\n                var trIndexB = $grandParent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //console.log(checkedCountB-1);\r\n                    //console.log(index2B - index1B);\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n       \r\n       \r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \".disAllBtn\", function (e) {\r\n\r\n        //$(this).parents(\"tr:first\").find(\":checkbox\").prop(\"checked\", false);\r\n\r\n        var $tr = $(this).closest(\"tr\");\r\n        var level = $tr.attr(\"level\");\r\n        //console.log(level);\r\n        var $cbs = $tr.find(\"input:checkbox\");\r\n        switch (level) {\r\n            case \"0\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", true);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", false);\r\n                });\r\n                break;\r\n            case \"1\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", true);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", false);\r\n                });\r\n\r\n                var pid = $tr.attr('pid');\r\n                var $parent = $('#x' + pid);\r\n                var trIndexB = $parent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n            default:\r\n                $cbs.prop(\"checked\", true);\r\n                $cbs.trigger(\"click\");\r\n                $cbs.prop(\"checked\", false);\r\n\r\n                var pidA = $tr.attr('pid');\r\n                var $parent = $('#x' + pidA);\r\n                var trIndexA = $parent.index();\r\n                var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n                var index1A = trIndexA + 1;\r\n                var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n                if ((aryIndexA + 1) == level1_IndexAry.length - 1)\r\n                    index2A = level1_IndexAry[level1_IndexAry.length - 1];\r\n                var $trsA = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountA = 0;\r\n                    for (var i = index1A; i <= index2A; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsA.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountA++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountA == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountA - 1) == (index2A - index1A)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                var pidB = $parent.attr('pid');\r\n                var $grandParent = $('#x' + pidB);\r\n                var trIndexB = $grandParent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //console.log(checkedCountB - 1);\r\n                    //console.log(index2B - index1B);\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n\r\n       \r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"change\", \"tr[level='2']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var $tr = $(this).closest(\"tr\");\r\n        var pid = $tr.attr('pid');\r\n        var value = $(this).val();\r\n        var $parent = $('#x' + pid);\r\n        var $grandParent = $('#x' + $parent.attr(\"pid\"));\r\n        var $brothers = $(\"tr[level='2'][pid='\"+pid+\"']>td>input:checkbox[value='\" + value + \"']\");\r\n        if (isChecked == true)\r\n        {\r\n            var allChecked = true;\r\n            //console.log(brothers);\r\n            $.each($brothers, function (index, item) {\r\n                if($(item).prop(\"checked\")==false)\r\n                {\r\n                    allChecked = false;\r\n                }\r\n            });\r\n            if(allChecked==true || value==\"2\")\r\n            {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n                if(value==\"2\")\r\n                    $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            \r\n            if (value == \"2\") {\r\n                //console.log(\"allUnChecked\");\r\n                var allUnChecked = true;\r\n                //console.log(brothers);\r\n                $.each($parent, function (index, item) {\r\n                    if ($(item).prop(\"checked\") == true) {\r\n                        allUnChecked = false;\r\n                    }\r\n                });\r\n                //console.log(allUnChecked);\r\n                if (allUnChecked == true && value!=\"2\") {\r\n                    $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n                }\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n        }\r\n\r\n        var trIndexA = $parent.index();\r\n        var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n        var index1A = trIndexA + 1;\r\n        var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n        if ((aryIndexA + 1) == level0_IndexAry.length - 1)\r\n            index2A = level1_IndexAry[level0_IndexAry.length - 1];\r\n\r\n        var $trsA = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountA = 0;\r\n        for (var i = index1A; i <= index2A; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsA.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountA++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n            if (checkedCountA == 0) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n            if ((checkedCountA - 1) != (index2A - index1A)) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else\r\n            {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n\r\n        var trIndexB = $grandParent.index();\r\n        var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n        var index1B = trIndexB + 1;\r\n        var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n        if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n            index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n        \r\n        var $trsB = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountB=0;\r\n        for (var i = index1B; i <= index2B; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsB.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountB++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n\r\n            if (checkedCountB == 0) {\r\n                $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if ((checkedCountB-1) != (index2B - index1B )) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    //$(document).on(\"change\", \".changeParent\", function (e) {\r\n    //    var $parent = $(this).closest(\"tr\");\r\n\r\n    //    if ($(this).prop(\"checked\")) {\r\n\r\n    //        var level = parseInt($parent.attr(\"level\"));\r\n    //        $parent.find(\":checkbox:first\").prop(\"checked\", true);\r\n\r\n    //        level = level - 1;\r\n\r\n    //        var avoidLoopFlag = 10;\r\n    //        while (level > 0 && avoidLoopFlag > 0) {\r\n    //            $parent = $(\"#x\" + $parent.attr(\"pid\"))\r\n    //            level = parseInt($parent.attr(\"level\"));\r\n    //            if (level == 0) {\r\n    //                avoidLoopFlag = 0;\r\n    //            }\r\n    //            $parent.find(\":checkbox:first\").prop(\"checked\", true);\r\n\r\n    //            avoidLoopFlag = avoidLoopFlag - 1;\r\n    //        }\r\n\r\n    //    }\r\n\r\n    //    e.preventDefault();\r\n    //    return false;\r\n    //});\r\n\r\n    $(document).ajaxStart(function () {\r\n        $(\"#loading\").show();\r\n    }).ajaxComplete(function () {\r\n        $(\"#loading\").hide();\r\n    });\r\n\r\n    $(document).on(\"click\", \"#btnSave\", function (e) {\r\n        var $trs = $(\"#tableRoot>tbody>tr:not(:first)\");\r\n\r\n        var postIds = [];\r\n        $.each($trs, function (index, item) {\r\n            var robj = {};\r\n            robj.mId = parseInt($(item).attr(\"id\").replace(/x/g, \"\"));\r\n            robj.ps = \"\";\r\n            //console.log(mId);\r\n            var $cbs = $(item).find(\"input:checkbox\");\r\n            var ps = [];\r\n            for (var i = 0; i < 10; i++) {\r\n                ps.push(0);\r\n            }\r\n            ps[0] = 1;\r\n\r\n            $.each($cbs, function (index, cb) {\r\n                var value = parseInt($(cb).val());\r\n                var isChecked = $(cb).prop(\"checked\");\r\n                if (isChecked == true) {\r\n                    ps[value - 1] = 1;\r\n                }\r\n            });\r\n            robj.ps = ps.reverse().toString().replace(/,/g, \"\");\r\n            postIds.push(robj);\r\n        });\r\n\r\n        document.querySelector(\"#hfV\").value = JSON.stringify(postIds);\r\n\r\n        //var postData = {};\r\n        //postData[\"r\"] = RI;\r\n        //postData[\"v\"] = JSON.stringify(postIds);\r\n        ////ajax\r\n        //$.ajax({\r\n        //    cache: false,\r\n        //    type: \"POST\",\r\n        //    url: \"/System/PowerM/RolePowerSetting_AddPowerSaveOP.aspx\",\r\n        //    data: postData\r\n        //})\r\n        //.done(function (data) {\r\n        //    if (data.chk > 0) {\r\n        //        alert(\"儲存成功\");\r\n        //        sessionStorage.removeItem(\"tbName\");\r\n        //        sessionStorage.removeItem(\"tbDesp\");\r\n        //        sessionStorage.removeItem(\"rbLevel\");\r\n        //        location.href = \"/System/PowerM/RolePowerSetting.aspx\";\r\n        //    }\r\n        //    else {\r\n        //        alert(\"儲存失敗\");\r\n        //    }\r\n        //})\r\n        //.fail(function (jqXHR, textStatus) {\r\n\r\n        //});\r\n\r\n        //e.preventDefault();\r\n        //return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \"#lastBtn\", function (e) {\r\n        //location.href = \"/System/PowerM/RolePowerSetting_Add.aspx\";\r\n        var keys = [];\r\n        var values = [];\r\n        keys[0] = \"sc\";\r\n        values[0] = CI;\r\n        doPOST(\"/System/PowerM/RolePowerSetting_Add.aspx\",keys,values)\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n\r\n    var doPOST = function (url, keys, values) {\r\n        keys = keys || [];\r\n        values = values || [];\r\n        var html = \"\";\r\n        html += \"<html><head></head><body><form id='formid' method='post' action='\" + url + \"' autocomplete='off'>\";\r\n        if (keys && values && (keys.length == values.length))\r\n            for (var i = 0; i < keys.length; i++)\r\n                html += \"<input type='hidden' name='\" + keys[i] + \"' value='\" + values[i] + \"'/>\";\r\n        html += \"</form><script type='text/javascript'>document.getElementById(\\\"formid\\\").submit()</script></body></html>\";\r\n        //console.log(html);\r\n        document.write(html);\r\n    };\r\n \r\n});"]}