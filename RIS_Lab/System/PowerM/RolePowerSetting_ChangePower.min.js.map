{"version":3,"sources":["RolePowerSetting_ChangePower.src.js"],"names":["$","lastNode","PSSAry","each","tbAry","index","item","push","ModuleID","data","myTr","PID","ID","ModuleName","after","$itemNode","PSSAryIndex","indexOf","i","VV","PSS","substr","append","$parent","haschildrens","parseInt","attr","$parentNext","next","blank","level","myClass","level0_IndexAry","length","document","on","e","isChecked","this","prop","trIndex","parent","aryIndex","index1","index2","checkedValue","val","$trs","tr","get","find","preventDefault","level1_IndexAry","$tr","closest","pid","value","trIndexB","aryIndexB","index1B","index2B","$trsB","checkedCountB","$cbs","trigger","x","toString","pidA","trIndexA","aryIndexA","index1A","index2A","$trsA","checkedCountA","pidB","$grandParent","$brothers","allChecked","allUnChecked","ajaxStart","show","ajaxComplete","hide","postIds","robj","mId","replace","ps","cb","reverse","querySelector","JSON","stringify","history","go","UP"],"mappings":"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","file":"RolePowerSetting_ChangePower.min.js","sourcesContent":["$(function () {\r\n    var myLi = \"\";\r\n    var lastNode = {};\r\n\r\n    var PSSAry = [];\r\n    $.each(tbAry, function (index, item) {\r\n        PSSAry.push(item.ModuleID);\r\n    });\r\n\r\n\r\n    $.each(data, function (index, item) {\r\n        //var th_or_td_start = \"<td>\";\r\n        //var th_or_td_end = \"</td>\";\r\n\r\n        myTr = \"\";\r\n        if (item.PID == 0) {\r\n           \r\n           \r\n            myTr = '<tr id=\"x' + item.ID + '\" haschildrens=\"0\" class=\"pinkcolor\" level=\"0\" pid=\"' + item.PID + '\">' + '<td>' + item.ModuleName + '</td></tr>';\r\n            //myTr = '<tr id=\"x' + item.ID + '\" level=\"0\" >' + th_or_td_start + item.ModuleName + th_or_td_end +'</tr>';\r\n            $('#tableRoot tr:last').after(myTr);\r\n            var $itemNode = $(\"#x\" + item.ID);\r\n\r\n            var PSSAryIndex = PSSAry.indexOf(item.ID);\r\n            //console.log(PSSAry);\r\n            //console.log(item.ID);\r\n            //console.log(PSSAryIndex);\r\n            if (PSSAryIndex >= 0) {\r\n                for (var i = 2; i <= 10; i++) {\r\n                    var VV = tbAry[PSSAryIndex].PSS.substr(i-1, 1);\r\n                    if (VV > 0) {\r\n                        $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\" checked=\"checked\"></td>');\r\n                    }\r\n                    else {\r\n                        $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n                    }\r\n                }\r\n                \r\n\r\n            }\r\n            else {\r\n                for (var i = 2; i <= 10; i++) {\r\n                    $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n                }\r\n            }\r\n\r\n           $itemNode.append('<td class=\"aCenter\"><input type=\"button\" value=\"全選\" class=\"allBtn btn\" /><input type=\"button\" value=\"全不選\" class=\"disAllBtn btn\"/></td>');\r\n        }\r\n\r\n        else {\r\n\r\n\r\n            var $parent = $(\"#x\" + item.PID);\r\n            var haschildrens = parseInt($parent.attr(\"haschildrens\"));\r\n            var $parentNext = {};\r\n            if (haschildrens > 0) {\r\n                $parentNext = $parent.next();\r\n                for (var i = 1; i <= haschildrens - 1; i++) {\r\n                    $parentNext = $parentNext.next();\r\n                }\r\n                //console.log($parentNext[0]);\r\n            }\r\n            else {\r\n                $parentNext = $parent;\r\n            }\r\n\r\n\r\n            var blank = \"\";\r\n            var level = parseInt($parent.attr(\"level\")) + 1;\r\n            //console.log(level);\r\n\r\n            //if (level < 2) {\r\n            //    th_or_td_start = \"<th>\";\r\n            //    th_or_td_end = \"</th>\";\r\n            //}\r\n\r\n            for (var i = 0; i <= level; i++) {\r\n                blank += \"&nbsp;&nbsp;&nbsp;\";\r\n            }\r\n            if (level >= 2)\r\n                blank += \"&nbsp;&nbsp;&nbsp;\";\r\n\r\n            var myClass = \"\";\r\n            if (level == 1)\r\n                myClass = \"yellowcolor\"\r\n            $parentNext.after('<tr class=\"' + myClass + '\" id=\"x' + item.ID + '\" haschildrens=\"0\" level=\"' + level + '\" pid=\"' + item.PID + '\">' + '<td>' + blank + item.ModuleName + '</td></tr>');\r\n            $(\"#x\" + item.PID).attr(\"haschildrens\", haschildrens + 1);\r\n\r\n            //$(\"#x\" + item.PID).after('<tr id=\"x' + item.ID + '\"  level=\"' + level + '\" pid=\"' + item.PID + '\">' + '<td>' + blank + item.ModuleName + '</td></tr>');\r\n\r\n            var $itemNode = $(\"#x\" + item.ID);\r\n            //$itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"2\" class=\"changeParent\"></td>');\r\n\r\n            var PSSAryIndex = PSSAry.indexOf(item.ID);\r\n            if (PSSAryIndex >= 0) {\r\n                for (var i = 2; i <= 10; i++) {\r\n                    var VV = tbAry[PSSAryIndex].PSS.substr(i-1, 1);\r\n                    if (VV > 0) {\r\n                        $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\" checked=\"checked\"></td>');\r\n                    }\r\n                    else {\r\n                        $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            else {\r\n                for (var i = 2; i <= 10; i++) {\r\n                    $itemNode.append('<td class=\"aCenter\"><input type=\"checkbox\" value=\"' + i + '\"></td>');\r\n                }\r\n            }\r\n\r\n            $itemNode.append('<td class=\"aCenter\"><input type=\"button\" value=\"全選\" class=\"allBtn btn\" /><input type=\"button\" value=\"全不選\" class=\"disAllBtn btn\"/></td>');\r\n        }\r\n\r\n        lastNode = item;\r\n    });\r\n\r\n    var level0_IndexAry = [];\r\n    $.each($(\"tr[level='0']\"), function (index, item) {\r\n        level0_IndexAry.push($(item).index());\r\n        //console.log(level0_IndexAry);\r\n    });\r\n    level0_IndexAry.push($(\"#tableRoot>tbody>tr\").length - 1);\r\n    //console.log(level0_IndexAry);\r\n    $(document).on(\"change\", \"tr[level='0']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var trIndex = $(this).parent(\"td\").parent('tr').index();\r\n        var aryIndex = level0_IndexAry.indexOf(trIndex);\r\n        var index1 = trIndex + 1;\r\n        var index2 = level0_IndexAry[aryIndex + 1] - 1;\r\n\r\n        if ((aryIndex + 1) == level0_IndexAry.length - 1)\r\n            index2 = level0_IndexAry[level0_IndexAry.length - 1];\r\n        var checkedValue = $(this).val();\r\n        //console.log(index1);\r\n        //console.log(index2);\r\n        //console.log(checkedValue);\r\n        var $trs = $(\"#tableRoot>tbody>tr\");\r\n        for (var i = index1; i <= index2; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trs.get(i);\r\n            //console.log(tr);\r\n            $(tr).find('input:checkbox[value=\"' + checkedValue + '\"]').prop('checked', isChecked);\r\n        }\r\n\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    var level1_IndexAry = [];\r\n    $.each($(\"tr[level='0'],tr[level='1']\"), function (index, item) {\r\n        level1_IndexAry.push($(item).index());\r\n    });\r\n    level1_IndexAry.push($(\"#tableRoot>tbody>tr\").length - 1);\r\n    //console.log(level0_IndexAry);\r\n    $(document).on(\"change\", \"tr[level='1']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var trIndex = $(this).parent(\"td\").parent('tr').index();\r\n        var aryIndex = level1_IndexAry.indexOf(trIndex);\r\n        var index1 = trIndex + 1;\r\n        var index2 = level1_IndexAry[aryIndex + 1] - 1;\r\n        //console.log(level1_IndexAry[aryIndex + 1] - 1);\r\n        if ((aryIndex + 1) == level1_IndexAry.length - 1) {\r\n            index2 = level1_IndexAry[level1_IndexAry.length - 1];\r\n        }\r\n        //console.log(index2);\r\n        var checkedValue = $(this).val();\r\n        //console.log(index1);\r\n        //console.log(index2);\r\n        //console.log(checkedValue);\r\n        var $trs = $(\"#tableRoot>tbody>tr\");\r\n        for (var i = index1; i <= index2; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trs.get(i);\r\n            //console.log(tr);\r\n            $(tr).find('input:checkbox[value=\"' + checkedValue + '\"]').prop('checked', isChecked);\r\n        }\r\n\r\n        //console.log(99999);\r\n        var $tr = $(this).closest(\"tr\");\r\n        var pid = $tr.attr('pid');\r\n        var $parent = $('#x' + pid);\r\n        var value = $(this).val();\r\n        var trIndexB = $parent.index();\r\n        var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n        var index1B = trIndexB + 1;\r\n        var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n        if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n            index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n\r\n        var $trsB = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountB = 0;\r\n        for (var i = index1B; i <= index2B; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsB.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountB++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n\r\n            if (checkedCountB == 0) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n            if ((checkedCountB - 1) != (index2B - index1B)) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \".allBtn\", function (e) {\r\n\r\n\r\n        //$(this).parents(\"tr:first\").find(\":checkbox\").prop(\"checked\", true);\r\n\r\n        var $tr = $(this).closest(\"tr\");\r\n        var level = $tr.attr(\"level\");\r\n        //console.log(level);\r\n        var $cbs = $tr.find(\"input:checkbox\");\r\n        switch (level) {\r\n            case \"0\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", false);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", true);\r\n                });\r\n                break;\r\n            case \"1\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", false);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", true);\r\n                });\r\n\r\n\r\n                var pid = $tr.attr('pid');\r\n                var $parent = $('#x' + pid);\r\n                var trIndexB = $parent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            default:\r\n                $cbs.prop(\"checked\", false);\r\n                $cbs.trigger(\"click\");\r\n                $cbs.prop(\"checked\", true);\r\n\r\n\r\n                var pidA = $tr.attr('pid');\r\n                var $parent = $('#x' + pidA);\r\n                var trIndexA = $parent.index();\r\n                var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n                var index1A = trIndexA + 1;\r\n                var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n                if ((aryIndexA + 1) == level1_IndexAry.length - 1)\r\n                    index2A = level1_IndexAry[level1_IndexAry.length - 1];\r\n                var $trsA = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountA = 0;\r\n                    for (var i = index1A; i <= index2A; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsA.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountA++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountA == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountA - 1) == (index2A - index1A)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                var pidB = $parent.attr('pid');\r\n                var $grandParent = $('#x' + pidB);\r\n                var trIndexB = $grandParent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //console.log(checkedCountB-1);\r\n                    //console.log(index2B - index1B);\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \".disAllBtn\", function (e) {\r\n\r\n        //$(this).parents(\"tr:first\").find(\":checkbox\").prop(\"checked\", false);\r\n\r\n        var $tr = $(this).closest(\"tr\");\r\n        var level = $tr.attr(\"level\");\r\n        //console.log(level);\r\n        var $cbs = $tr.find(\"input:checkbox\");\r\n        switch (level) {\r\n            case \"0\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", true);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", false);\r\n                });\r\n                break;\r\n            case \"1\":\r\n                $.each($cbs, function (index, item) {\r\n                    $(item).prop(\"checked\", true);\r\n                    $(item).trigger(\"click\");\r\n                    $(item).prop(\"checked\", false);\r\n                });\r\n\r\n                var pid = $tr.attr('pid');\r\n                var $parent = $('#x' + pid);\r\n                var trIndexB = $parent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n            default:\r\n                $cbs.prop(\"checked\", true);\r\n                $cbs.trigger(\"click\");\r\n                $cbs.prop(\"checked\", false);\r\n\r\n                var pidA = $tr.attr('pid');\r\n                var $parent = $('#x' + pidA);\r\n                var trIndexA = $parent.index();\r\n                var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n                var index1A = trIndexA + 1;\r\n                var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n                if ((aryIndexA + 1) == level1_IndexAry.length - 1)\r\n                    index2A = level1_IndexAry[level1_IndexAry.length - 1];\r\n                var $trsA = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountA = 0;\r\n                    for (var i = index1A; i <= index2A; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsA.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountA++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountA == 0) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountA - 1) == (index2A - index1A)) {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $parent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                var pidB = $parent.attr('pid');\r\n                var $grandParent = $('#x' + pidB);\r\n                var trIndexB = $grandParent.index();\r\n                var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n                var index1B = trIndexB + 1;\r\n                var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n                if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n                    index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n                //console.log(index1B);\r\n                //console.log(index2B);\r\n                var $trsB = $(\"#tableRoot>tbody>tr\");\r\n\r\n                for (var x = 2; x <= 10; x++) {\r\n                    //console.log(x);\r\n                    var checkedCountB = 0;\r\n                    for (var i = index1B; i <= index2B; i++) {\r\n                        //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n                        var tr = $trsB.get(i);\r\n                        //console.log(tr);\r\n\r\n                        $.each($(tr).find('input:checkbox[value=\"' + x + '\"]'), function (index, item) {\r\n                            if ($(item).prop(\"checked\") == true) {\r\n                                checkedCountB++;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //console.log(checkedCountB - 1);\r\n                    //console.log(index2B - index1B);\r\n\r\n                    if (x.toString() == \"2\") {\r\n                        if (checkedCountB == 0) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ((checkedCountB - 1) == (index2B - index1B)) {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", true);\r\n                        }\r\n                        else {\r\n                            $grandParent.find(\"input:checkbox[value='\" + x + \"']\").prop(\"checked\", false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    $(document).on(\"change\", \"tr[level='2']>td>input:checkbox\", function (e) {\r\n        var isChecked = $(this).prop('checked');\r\n        var $tr = $(this).closest(\"tr\");\r\n        var pid = $tr.attr('pid');\r\n        var value = $(this).val();\r\n        var $parent = $('#x' + pid);\r\n        var $grandParent = $('#x' + $parent.attr(\"pid\"));\r\n        var $brothers = $(\"tr[level='2'][pid='\" + pid + \"']>td>input:checkbox[value='\" + value + \"']\");\r\n        if (isChecked == true) {\r\n            var allChecked = true;\r\n            //console.log(brothers);\r\n            $.each($brothers, function (index, item) {\r\n                if ($(item).prop(\"checked\") == false) {\r\n                    allChecked = false;\r\n                }\r\n            });\r\n            if (allChecked == true || value == \"2\") {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n                if (value == \"2\")\r\n                    $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (value == \"2\") {\r\n                //console.log(\"allUnChecked\");\r\n                var allUnChecked = true;\r\n                //console.log(brothers);\r\n                $.each($parent, function (index, item) {\r\n                    if ($(item).prop(\"checked\") == true) {\r\n                        allUnChecked = false;\r\n                    }\r\n                });\r\n                //console.log(allUnChecked);\r\n                if (allUnChecked == true && value != \"2\") {\r\n                    $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n                }\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n        }\r\n\r\n        var trIndexA = $parent.index();\r\n        var aryIndexA = level1_IndexAry.indexOf(trIndexA);\r\n        var index1A = trIndexA + 1;\r\n        var index2A = level1_IndexAry[aryIndexA + 1] - 1;\r\n\r\n        if ((aryIndexA + 1) == level0_IndexAry.length - 1)\r\n            index2A = level1_IndexAry[level0_IndexAry.length - 1];\r\n\r\n        var $trsA = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountA = 0;\r\n        for (var i = index1A; i <= index2A; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsA.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountA++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n            if (checkedCountA == 0) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n            if ((checkedCountA - 1) != (index2A - index1A)) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n\r\n        var trIndexB = $grandParent.index();\r\n        var aryIndexB = level0_IndexAry.indexOf(trIndexB);\r\n        var index1B = trIndexB + 1;\r\n        var index2B = level0_IndexAry[aryIndexB + 1] - 1;\r\n\r\n        if ((aryIndexB + 1) == level0_IndexAry.length - 1)\r\n            index2B = level0_IndexAry[level0_IndexAry.length - 1];\r\n\r\n        var $trsB = $(\"#tableRoot>tbody>tr\");\r\n        var checkedCountB = 0;\r\n        for (var i = index1B; i <= index2B; i++) {\r\n            //console.log($(\"#tableRoot>tbody>tr\").get(i));\r\n            var tr = $trsB.get(i);\r\n            //console.log(tr);\r\n\r\n            $.each($(tr).find('input:checkbox[value=\"2\"]'), function (index, item) {\r\n                if ($(item).prop(\"checked\") == true) {\r\n                    checkedCountB++;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (value == \"2\") {\r\n\r\n            if (checkedCountB == 0) {\r\n                $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $grandParent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n        else {\r\n            if ((checkedCountB - 1) != (index2B - index1B)) {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", false);\r\n            }\r\n            else {\r\n                $parent.find(\"input:checkbox[value='\" + value + \"']\").prop(\"checked\", true);\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    //$(document).on(\"change\", \".changeParent\", function (e) {\r\n    //    var $parent = $(this).closest(\"tr\");\r\n\r\n    //    if ($(this).prop(\"checked\")) {\r\n\r\n    //        var level = parseInt($parent.attr(\"level\"));\r\n    //        $parent.find(\":checkbox:first\").prop(\"checked\", true);\r\n\r\n    //        level = level - 1;\r\n\r\n    //        var avoidLoopFlag = 10;\r\n    //        while (level > 0 && avoidLoopFlag > 0) {\r\n    //            $parent = $(\"#x\" + $parent.attr(\"pid\"))\r\n    //            level = parseInt($parent.attr(\"level\"));\r\n    //            if (level == 0) {\r\n    //                avoidLoopFlag = 0;\r\n    //            }\r\n    //            $parent.find(\":checkbox:first\").prop(\"checked\", true);\r\n\r\n    //            avoidLoopFlag = avoidLoopFlag - 1;\r\n    //        }\r\n\r\n    //    }\r\n\r\n    //    e.preventDefault();\r\n    //    return false;\r\n    //});\r\n\r\n    $(document).ajaxStart(function () {\r\n        $(\"#loading\").show();\r\n    }).ajaxComplete(function () {\r\n        $(\"#loading\").hide();\r\n    });\r\n\r\n    $(document).on(\"click\", \"#btnSave\", function (e) {\r\n        var $trs = $(\"#tableRoot>tbody>tr:not(:first)\");\r\n\r\n        var postIds = [];\r\n        $.each($trs, function (index, item) {\r\n            var robj = {};\r\n            robj.mId = parseInt($(item).attr(\"id\").replace(/x/g, \"\"));\r\n            robj.ps = \"\";\r\n            //console.log(mId);\r\n            var $cbs = $(item).find(\"input:checkbox\");\r\n            var ps = [];\r\n            for (var i = 0; i < 10; i++) {\r\n                ps.push(0);\r\n            }\r\n            ps[0] = 1;\r\n\r\n            $.each($cbs, function (index, cb) {\r\n                var value = parseInt($(cb).val());\r\n                var isChecked = $(cb).prop(\"checked\");\r\n                if (isChecked == true) {\r\n                    ps[value - 1] = 1;\r\n                }\r\n            });\r\n            robj.ps = ps.reverse().toString().replace(/,/g, \"\");\r\n            postIds.push(robj);\r\n        });\r\n\r\n        document.querySelector(\"#hfV\").value = JSON.stringify(postIds);\r\n\r\n        //var postData = {};\r\n        //postData[\"r\"] = RI;\r\n        //postData[\"v\"] = JSON.stringify(postIds);\r\n        ////ajax\r\n        //$.ajax({\r\n        //    cache: false,\r\n        //    type: \"POST\",\r\n        //    url: \"/System/PowerM/RolePowerSetting_AddPowerSaveOP.aspx\",\r\n        //    data: postData\r\n        //})\r\n        //.done(function (data) {\r\n        //    if (data.chk > 0) {\r\n        //        alert(\"儲存成功\");\r\n        //        sessionStorage.removeItem(\"tbName\");\r\n        //        sessionStorage.removeItem(\"tbDesp\");\r\n        //        sessionStorage.removeItem(\"rbLevel\");\r\n        //        location.href = \"/System/PowerM/RolePowerSetting.aspx\";\r\n        //    }\r\n        //    else {\r\n        //        alert(\"儲存失敗\");\r\n        //    }\r\n        //})\r\n        //.fail(function (jqXHR, textStatus) {\r\n\r\n        //});\r\n\r\n        //e.preventDefault();\r\n        //return false;\r\n    });\r\n\r\n    $(document).on(\"click\", \"#lastBtn\", function (e) {\r\n        //location.href = \"/System/PowerM/RolePowerSetting.aspx\";\r\n        history.go(-1);\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n\r\n    if(UP==false)\r\n    {\r\n        $('input:checkbox').prop('disabled', true);\r\n        $('.disAllBtn').prop('disabled', true);\r\n        $('.allBtn').prop('disabled', true);\r\n    }\r\n\r\n\r\n});"]}