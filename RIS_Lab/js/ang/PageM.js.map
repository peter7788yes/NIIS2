{"version":3,"sources":["PageM.src.js"],"names":["angular","module","config","$httpProvider","defaults","headers","common","useXDomain","provider","this","$get","$http","self","rdCount","pgNow","pgCount","pgSize","pgArray","pgStart","pgRange","pgEnd","isHide","getDataCallback","data","callback","Math","floor","i","push","$","document","ajaxStart","show","ajaxComplete","hide","changePage","url","postData","ajax","cache","type","done","fail","jqXHR","textStatus","genPageData","pageIndex","pgData","extend","filterPageData","$pgData","directive","$window","templateUrlF","elem","attrs","templateUrl","controllerF","$scope","linkF","scope","element","require","restrict","VMD","changePageD","transclude","controller","link"],"mappings":";;AAAAA,QAAQC,OAAO,YACdC,QAAQ,gBAAiB,SAAUC,SACzBA,GAAcC,SAASC,QAAQC,OAAO,oBAM7CH,EAAcC,SAASC,QAAQC,OAAO,gBAAkB,mDACxDH,EAAcC,SAASG,YAAa,KAKvCC,SAAS,eAAgB,WAEtBC,KAAKC,MAAQ,QAAS,SAAUC,GAG5B,GAAIC,GAAOH,IAmHX,OAlHAG,GAAKC,QAAU,EACfD,EAAKE,MAAQ,EACbF,EAAKG,QAAU,EACfH,EAAKI,OAAS,GACdJ,EAAKK,WACLL,EAAKM,QAAU,EACfN,EAAKO,QAAU,GACfP,EAAKQ,MAAQR,EAAKO,QAClBP,EAAKS,QAAS,EAEdT,EAAKU,gBAAkB,SAAUC,EAAMC,GAKnCZ,EAAKC,QAAUU,EAAKV,QACpBD,EAAKE,MAAQS,EAAKT,MAClBF,EAAKG,QAA0B,GAAhBQ,EAAKR,QAAe,EAAIQ,EAAKR,QAC5CH,EAAKI,OAASO,EAAKP,OAED,GAAdJ,EAAKE,MACLF,EAAKM,QAAU,EAEVN,EAAKE,MAAQF,EAAKO,SAAW,EAClCP,EAAKM,QAAUN,EAAKE,MAAQF,EAAKO,QAAU,EAG3CP,EAAKM,QAAWO,KAAKC,MAAMH,EAAKT,MAAQF,EAAKO,SAAWP,EAAKO,QAAW,EAGxEP,EAAKE,OAASF,EAAKG,QACnBH,EAAKQ,MAAQR,EAAKE,MAGbF,EAAKM,QAAUN,EAAKO,SAAYP,EAAKG,QACtCH,EAAKQ,MAAQR,EAAKG,QAElBH,EAAKQ,MAAQR,EAAKM,QAAUN,EAAKO,QAAU,EAGnDP,EAAKK,UACL,KAAK,GAAIU,GAAIf,EAAKM,QAASS,GAAKf,EAAKQ,MAAOO,IACxCf,EAAKK,QAAQW,KAAKD,EAEtBH,GAASD,IAabM,EAAEC,UAAUC,UAAU,WAClBF,EAAE,YAAYG,SACfC,aAAa,WACZJ,EAAE,YAAYK,SAGlBtB,EAAKuB,WAAa,SAAUC,EAAKC,EAAUb,GACvCZ,EAAKS,QAAS,EACdQ,EAAES,MACEC,OAAO,EACPC,KAAM,OACNJ,IAAKA,EACLb,KAAMc,IAETI,KAAK,SAAUlB,GACZX,EAAKU,gBAAgBC,EAAMC,KAE9BkB,KAAK,SAAUC,EAAOC,GACnBhC,EAAKC,QAAU,EACfD,EAAKE,MAAQ,EACbF,EAAKG,QAAU,EACfH,EAAKI,OAAS,GACdJ,EAAKK,WACLL,EAAKM,QAAU,EACfN,EAAKO,QAAU,GACfP,EAAKQ,MAAQR,EAAKO,QAClBP,EAAKS,QAAS,KAetBT,EAAKiC,YAAc,SAAUC,GACzB,GAAIC,KAEJ,OADAA,GAAOjC,MAAQgC,EACR9C,QAAQgD,OAAOpC,EAAMmC,IAOhCnC,EAAKqC,eAAiB,SAAUC,EAASb,GAIrC,MAHAA,GAAWA,MACXA,EAASvB,MAAQoC,EAAQpC,MACzBuB,EAASrB,OAASkC,EAAQlC,OACnBqB,GAEJzB,MAGduC,UAAU,WAAY,UAAW,SAAUC,GAExC,GAAIC,GAAe,SAAUC,EAAMC,GAC/B,MAAOA,GAAMC,aAGbC,GAAe,SAAU,SAAUC,GACnCA,EAAOjC,KAAO2B,EAAQ3B,OAGtBkC,EAAQ,SAAUC,EAAOC,EAASN,IAmBtC,QAGIO,SAAU,WACVC,SAAU,IACVH,OAGII,IAAK,WACLC,YAAa,kBAEjBC,YAAY,EAEZV,YAAaH,EACbc,WAAYV,EACZW,KAAMT","file":"PageM.js","sourcesContent":["angular.module(\"PageM\", [])\r\n.config([\"$httpProvider\", function ($httpProvider) {\r\n    delete $httpProvider.defaults.headers.common[\"X-Requested-With\"];\r\n    //$httpProvider.defaults.headers.post['Accept'] = 'application/json, text/javascript';\r\n    //$httpProvider.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8';\r\n    //$httpProvider.defaults.headers.post['Access-Control-Max-Age'] = '1728000';\r\n    //$httpProvider.defaults.headers.common['Access-Control-Max-Age'] = '1728000';\r\n    //$httpProvider.defaults.headers.common['Accept'] = 'application/json, text/javascript';\r\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = \"application/x-www-form-urlencoded; charset=UTF-8\";\r\n    $httpProvider.defaults.useXDomain = true;\r\n    //$httpProvider.defaults.transformRequest = function (data) {\r\n    //   return data != undefined ? $.param(data) : null;\r\n    //}\r\n}])\r\n.provider(\"PageProvider\", function () {\r\n    //$http不能壓縮,angular會失敗\r\n    this.$get = [\"$http\", function ($http) {\r\n\r\n        //Server\r\n        var self = this;\r\n        self.rdCount = 0;\r\n        self.pgNow = 0;\r\n        self.pgCount = 0;\r\n        self.pgSize = 10;\r\n        self.pgArray = [];\r\n        self.pgStart = 1;\r\n        self.pgRange = 10;\r\n        self.pgEnd = self.pgRange;//10\r\n        self.isHide = true;\r\n        //產生ViewModel\r\n        self.getDataCallback = function (data, callback) {\r\n\r\n\r\n\r\n            //data 是 Server PageVM Class\r\n            self.rdCount = data.rdCount;\r\n            self.pgNow = data.pgNow;\r\n            self.pgCount = data.pgCount == 0 ? 1 : data.pgCount;\r\n            self.pgSize = data.pgSize;\r\n\r\n            if (self.pgNow == 1) {\r\n                self.pgStart = 1;\r\n            }\r\n            else if (self.pgNow % self.pgRange == 0) {\r\n                self.pgStart = self.pgNow - self.pgRange + 1;\r\n            }\r\n            else {\r\n                self.pgStart = (Math.floor(data.pgNow / self.pgRange) * self.pgRange) + 1;\r\n            }\r\n\r\n            if (self.pgNow == self.pgCount) {\r\n                self.pgEnd = self.pgNow;\r\n            }\r\n            else {\r\n                if ((self.pgStart + self.pgRange) >= self.pgCount)\r\n                    self.pgEnd = self.pgCount;\r\n                else\r\n                    self.pgEnd = self.pgStart + self.pgRange - 1;\r\n            }\r\n\r\n            self.pgArray = [];\r\n            for (var i = self.pgStart; i <= self.pgEnd; i++) {\r\n                self.pgArray.push(i);\r\n            }\r\n            callback(data);\r\n\r\n        };\r\n\r\n        //var scope = angular.element(\"body\").scope();\r\n        //$scope.$apply(function () {\r\n        //    //scope.EnTraceCode = response.EnTraceCode;\r\n        //    //scope.action = \"VitaeInfo\";\r\n        //    $scope.PM = PageProvider;\r\n        //});\r\n        ///因為是用ajax方式，所以要在controller自己寫觸發$scope的改變\r\n\r\n        //$.ajaxSetup({ cache: false });\r\n        $(document).ajaxStart(function () {\r\n            $(\"#loading\").show();\r\n        }).ajaxComplete(function () {\r\n            $(\"#loading\").hide();\r\n        });\r\n        //ajax\r\n        self.changePage = function (url, postData, callback) {\r\n            self.isHide = false;\r\n            $.ajax({\r\n                cache: false,\r\n                type: \"POST\",\r\n                url: url,\r\n                data: postData\r\n            })\r\n            .done(function (data) {\r\n                self.getDataCallback(data, callback);\r\n            })\r\n            .fail(function (jqXHR, textStatus) {\r\n                self.rdCount = 0;\r\n                self.pgNow = 0;\r\n                self.pgCount = 0;\r\n                self.pgSize = 10;\r\n                self.pgArray = [];\r\n                self.pgStart = 1;\r\n                self.pgRange = 10;\r\n                self.pgEnd = self.pgRange;//10\r\n                self.isHide = true;\r\n            });\r\n\r\n            //$http.post(url, postData)\r\n            //.success(function (data, status, headers, config) {\r\n            //    self.getDataCallback(data, callback);\r\n            //})\r\n            //.error(function (data, status, headers, config) {\r\n            //    // called asynchronously if an error occurs\r\n            //    // or server returns response with an error status.\r\n            //});\r\n        };\r\n        //client 換頁時改變 PageProvider 物件\r\n        //產生page物件\r\n        //ex page 2 change to page 3\r\n        self.genPageData = function (pageIndex) {\r\n            var pgData = {};\r\n            pgData.pgNow = pageIndex;\r\n            return angular.extend(self, pgData);\r\n\r\n        };\r\n\r\n        //產生postData\r\n        //參數:$pageProvider  = PageProvider; \r\n        //回傳:PostData\r\n        self.filterPageData = function ($pgData, postData) {\r\n            postData = postData || {};\r\n            postData.pgNow = $pgData.pgNow;\r\n            postData.pgSize = $pgData.pgSize;\r\n            return postData;\r\n        };\r\n        return self;\r\n    }];\r\n})\r\n.directive(\"pageNav\", [\"$window\", function ($window) {\r\n\r\n    var templateUrlF = function (elem, attrs) {\r\n        return attrs.templateUrl;\r\n    };\r\n\r\n    var controllerF = [\"$scope\", function ($scope) {\r\n        $scope.Math = $window.Math;\r\n    }];\r\n\r\n    var linkF = function (scope, element, attrs) {\r\n        //對pageModel屬性做一點事情\r\n\r\n        //scope.$watch(\"pageModelD\", function (newValue, oldValue) {\r\n        //    if (newValue)\r\n        //        console.log(\"I see a data change!\");\r\n        //}, true);\r\n\r\n        //如果填false，每次都會執行function寫log，因為引用來源每次都不一樣\r\n        //如果填true，如果值相同就不執行function了\r\n        //Compare for object equality using angular.equals instead of comparing for reference equality.\r\n    };\r\n\r\n    //Example of a directive that optionally requires a form controller from an ancestor:\r\n    //myApp.directive('myDirective', function() {\r\n    //    return {\r\n    //        require: '^?form'\r\n    //    }\r\n    //}\r\n    return {\r\n        //The ^ prefix means that this directive searches for the controller on its parents (without the ^ prefix, the directive would look for the controller on just its own element)\r\n        //require是需求在什麼controller裡面或是什麼tag裡面\r\n        require: [\"ngModel\"],//Example of a directive that requires ngModel controller:\r\n        restrict: \"E\",\r\n        scope: {\r\n            // same as '=info'\r\n            //info:\"=\"\r\n            VMD: \"=ngModel\",\r\n            changePageD: \"&onChangePageD\"\r\n        },\r\n        transclude: true,//,transclude:'element'//用element的時候是否包含原來的子元素，用element的時候是否包含原來的本身元素和子元素\r\n        //templateUrl: \"js/template/PageNav.html\",\r\n        templateUrl: templateUrlF,\r\n        controller: controllerF,\r\n        link: linkF\r\n    };\r\n}]);\r\n\r\n"]}