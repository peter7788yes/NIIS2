{"version":3,"sources":["InputM.src.js"],"names":["angular","module","provider","this","$get","self","directive","restrict","require","link","scope","element","attrs","ctrl","console","log","pattern","$parsers","unshift","viewValue","length","test","$setValidity","transclude","elm","compile","name","formName","form","errMsg","err","required","VM","vm","html","undefined","value","$http","$templateCache","$compile","tElement","tAttrs","min","max","templateUrl"],"mappings":";;AAAAA,QAAQC,OAAO,aACdC,SAAS,gBAAiB,WAEnBC,KAAKC,MAAQ,WACT,GAAIC,GAAOF,IACX,OAAOE,OAGlBC,UAAU,aAAc,WACrB,OACIC,SAAU,IACVC,QAAS,UACTC,KAAM,SAAUC,EAAOC,EAASC,EAAOC,GACnCC,QAAQC,IAAIH,EAEZ,IAAII,GAAU,wBACdH,GAAKI,SAASC,QAAQ,SAAUC,GAE5B,MAAwB,KAApBA,EAAUC,QAA2C,GAA3BJ,EAAQK,KAAKF,IACvCN,EAAKS,aAAa,cAAc,GACzBH,OAEPN,GAAKS,aAAa,cAAc,SAOnDhB,UAAU,aAAc,WACrB,OACIE,SAAU,WACVD,SAAU,IACVG,SAKAa,YAAY,EAEZd,KAAM,SAAUC,EAAOc,EAAKZ,EAAOC,KACnCY,QAAS,SAAUd,EAASC,GACxB,GAAIc,GAAOd,EAAMc,KACbC,EAAWf,EAAMgB,KACjBC,EAASjB,EAAMkB,IACfC,EAAWnB,EAAMmB,SACjBC,EAAKpB,EAAMqB,GACXC,EAAM,4BAA8BR,EAAO,gBAAgBM,EAAG,eACnDG,SAAZJ,IACCG,GAAO,aACXA,GAAQ,KACQC,QAAZJ,IACAG,GAAQ,kBAAoBP,EAAW,IAAMD,EAAO,+BACxDQ,GAAQ,kBAAoBP,EAAW,IAAMD,EAAO,uBAAyBG,EAAS,UAEtFlB,EAAQuB,KAAKA,OAIxB5B,UAAU,cAAe,WACtB,OAEIC,SAAU,IACVG,SAKAa,YAAY,EAEZd,KAAM,SAAUC,EAAOc,EAAKZ,EAAOC,KACnCY,QAAS,SAAUd,EAASC,GACxB,GAAIwB,GAAQxB,EAAMwB,MACdV,EAAOd,EAAMc,KACbC,EAAWf,EAAMgB,IACRhB,GAAMkB,GACnBnB,GAAQuB,KAAK,8BAAgCR,EAAO,YAAYU,EAAM,mBAAqBT,EAAW,oBAIjHrB,UAAU,eAAgB,QAAS,iBAAkB,WAAY,SAAU+B,EAAOC,EAAgBC,GAW/F,OACI/B,SAAU,WAEVD,SAAU,IAMVgB,YAAY,EAaZE,QAAS,SAAUe,EAAUC,GACzB,GAAIC,GAAMD,EAAOC,IACbC,EAAMF,EAAOE,IACbjB,EAAOe,EAAOf,KACdC,EAAWc,EAAOb,KAClBC,EAASY,EAAOX,IAChBE,EAAKS,EAAOR,EACEQ,GAAOG,WAEzBJ,GAASN,KAAK,6BAA+BQ,EAAM,UAAYC,EAAM,WAAajB,EAAO,eAAiBM,EAAK,sBAAwBL,EAAW,IAAMD,EAAO,qBAAuBG,EAAS","file":"InputM.min.js","sourcesContent":["angular.module(\"InputM\", [])\r\n.provider(\"InputProvider\", function () {\r\n        //$http不能壓縮,angular會失敗\r\n        this.$get = [function () {\r\n            var self = this;\r\n            return self;\r\n        }];\r\n})\r\n.directive(\"checkRocid\", function () {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function (scope, element, attrs, ctrl) {   //ctrl= NgModelController\r\n            console.log(attrs);\r\n            //這裡的驗證要從寫\r\n            var pattern = /[a-zA-Z][1-2]{1}\\d{8}/g;\r\n            ctrl.$parsers.unshift(function (viewValue) {\r\n                //alert(viewValue);\r\n                if (viewValue.length == 10 && pattern.test(viewValue) == true) {\r\n                    ctrl.$setValidity('checkRocid', true);\r\n                    return viewValue;\r\n                } else {\r\n                    ctrl.$setValidity('checkRocid', false);\r\n                    return undefined;\r\n                }\r\n            });\r\n        }\r\n    };\r\n})\r\n.directive(\"inputRocid\", function () {\r\n    return {\r\n        require: [\"ngModel\"],\r\n        restrict: \"E\",\r\n        scope: {\r\n            // same as '=info'\r\n            //info:\"=\"\r\n            //VMD: \"=ngModel\"\r\n        },\r\n        transclude: true,//,transclude:'element'//用element的時候是否包含原來的子元素，\r\n        //template: \"<input type='text' name='rocId'  ng-model='VMD.VM' check-roc-id/><span ng-show=form1.rocId.$error.checkRocId' ng-bind='VMD.errMsg'></span>\",\r\n        link: function (scope, elm, attrs, ctrl) { },\r\n        compile: function (element, attrs) {\r\n            var name = attrs.name;\r\n            var formName = attrs.form;\r\n            var errMsg = attrs.err;\r\n            var required = attrs.required;\r\n            var VM = attrs.vm;\r\n            var html =\"<input type='text' name='\" + name + \"'  ng-model='\"+VM+\"' check-rocid\";\r\n            if(required != undefined)\r\n                html +=\" required\";\r\n            html += \"/>\";\r\n            if (required != undefined)\r\n                html += \"<span ng-show='\" + formName + \".\" + name + \".$error.required'>必填</span>\";\r\n            html += \"<span ng-show='\" + formName + \".\" + name + \".$error.checkRocid'>\" + errMsg + \"</span>\";\r\n\r\n            element.html(html);\r\n        }\r\n    };\r\n})\r\n.directive(\"inputSubmit\", function () {\r\n    return {\r\n        //require: [\"ngModel\"],\r\n        restrict: \"E\",\r\n        scope: {\r\n            // same as '=info'\r\n            //info:\"=\"\r\n            //VMD: \"=ngModel\"\r\n        },\r\n        transclude: true,//,transclude:'element'//用element的時候是否包含原來的子元素，\r\n        //template: \"<input type='text' name='rocId'  ng-model='VMD.VM' check-roc-id/><span ng-show=form1.rocId.$error.checkRocId' ng-bind='VMD.errMsg'></span>\",\r\n        link: function (scope, elm, attrs, ctrl) { },\r\n        compile: function (element, attrs) {\r\n            var value = attrs.value;\r\n            var name = attrs.name;\r\n            var formName = attrs.form;\r\n            var errMsg = attrs.err;\r\n            element.html(\"<input type='button' name='\" + name + \"' value='\"+value+\"' ng-disabled ='\" + formName + \".$invaild'/>\");\r\n        }\r\n    };\r\n})\r\n.directive(\"inputNumber\", [\"$http\", \"$templateCache\", \"$compile\", function ($http, $templateCache, $compile) {\r\n    //var getTemlateUrl = function (url) {\r\n    //    var data = \"\";\r\n    //    $http.get(url)\r\n    //         .then(function (response) {\r\n    //             //alert(response.data);\r\n    //             data = response.data;\r\n    //             //element.html($compile(response.data)(scope));\r\n    //         });\r\n    //    return data;\r\n    //}\r\n    return {\r\n        require: [\"ngModel\"],\r\n        //scope: true, //false => 與controller 的scope同步,true 就是 isolate scope\r\n        restrict: \"E\",\r\n        //scope: {\r\n        //    // same as '=info'\r\n        //    //info:\"=\"\r\n        //    VMD: \"=ngModel\"\r\n        //},\r\n        transclude: true,//,transclude:'element'//用element的時候是否包含原來的子元素，\r\n        //template: \"<input type='text' name='rocId'  ng-model='VMD.VM' check-roc-id/><span ng-show=form1.rocId.$error.checkRocId' ng-bind='VMD.errMsg'></span>\",\r\n        //link: function (scope, element, attrs, ctrl) {\r\n        //link: function(scope, element){\r\n        //    $templateRequest(\"template.html\").then(function(html){\r\n        //        element.append($compile(html)(scope));\r\n        //    });\r\n        //};\r\n        //compile:  function(element, attrs) {\r\n        //    $http.get(attrs.templateUrl, {cache: $templateCache}).success(function(html) {\r\n\r\n        //      t.Element.html(html);\r\n        //}\r\n        compile: function (tElement, tAttrs) {\r\n            var min = tAttrs.min;\r\n            var max = tAttrs.max;\r\n            var name = tAttrs.name;\r\n            var formName = tAttrs.form;\r\n            var errMsg = tAttrs.err;\r\n            var VM = tAttrs.vm;\r\n            var templateUrl = tAttrs.templateUrl;\r\n\r\n            tElement.html(\"<input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + name + \"' ng-model='\" + VM + \"' /><span ng-show='\" + formName + \".\" + name + \".$valid == false'>\" + errMsg + \"</span>\");\r\n            //var dict =\r\n            //    {\r\n            //        \"@min\": min,\r\n            //        \"@max\": max,\r\n            //        \"@name\": name,\r\n            //        \"@VM\": VM,\r\n            //        \"@ng-show\": formName + \".\" + name + \".$valid == false\",\r\n            //        \"@errMsg\": errMsg\r\n            //    };\r\n            //var tag = '<input type=\"number\" min=\"@min\" max=\"@max\" name=\"@name\" ng-model=\"@VM\" /><span ng-show=\"@ng-show\">@errMsg</span>';\r\n            //angular.forEach(dict, function (value, key) {\r\n            //    tag = tag.replace(key, value);\r\n            //});\r\n            //tElement.html(tag);\r\n            //var keyArray = [\"@min\", \"@max\", \"@name\", \"@VM\", \"@ng-show\",\"@errMsg\"];\r\n            //var valueArray = [min, max, name, VM, formName + \".\" + name + \".$valid == false\", errMsg];\r\n            //alert(templateUrl);\r\n            //tElement.html(\"<input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + name + \"' ng-model='\" + VM + \"' /><span ng-show='\" + formName + \".\" + name + \".$valid == false'>\" + errMsg + \"</span>\");\r\n            //tElement.html(\"{{\" + formName + \".\" + name + \".$valid == false\" + \"}}\");\r\n            //var tmp = \"\";\r\n            //var templateLoader = $http.get(templateUrl, { cache: $templateCache })\r\n            //                       .success(function (html) {\r\n            //                           var data = html;\r\n            //                           angular.forEach(dict, function (value, key) {\r\n            //                               data = data.replace(key, value);\r\n            //                           });\r\n            //                           tmp = data;\r\n            //                           tElement.html(data);\r\n            //                       });\r\n            // return function (scope, element, attrs) {\r\n            //             templateLoader.then(function (templateText) {\r\n            //                 element.html($compile(tElement.html())(scope));\r\n            //             });\r\n            //         };\r\n            //element.html($sce.trustAsHtml(getTemlateUrl(templateUrl)));\r\n        }\r\n    };\r\n}]);"]}